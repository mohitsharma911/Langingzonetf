trigger: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: landingzone
  - name: terraformVersion
    value: '1.5.7'  # Specify the Terraform version you want to use

stages:
- stage: TerraformInit
  displayName: 'Terraform Init'
  jobs:
  - job: Init
    timeoutInMinutes: 15
    cancelTimeoutInMinutes: 15
    steps:
    - checkout: self
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'
    - script: |
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
      displayName: 'Install Azure CLI'
    - script: |
        wget https://releases.hashicorp.com/terraform/$(terraformVersion)/terraform_$(terraformVersion)_linux_amd64.zip
        unzip terraform_$(terraformVersion)_linux_amd64.zip
        sudo mv terraform /usr/local/bin/
        terraform -version
      displayName: 'Install Terraform'
    - script: |
        cd modules/managementgroups
        terraform init
      displayName: 'Terraform Init'

- stage: TerraformPlan
  displayName: 'Terraform Plan'
  dependsOn: TerraformInit
  jobs:
  - job: Plan
    timeoutInMinutes: 15
    cancelTimeoutInMinutes: 15
    steps:
    - checkout: self
    - script: |
        wget https://releases.hashicorp.com/terraform/$(terraformVersion)/terraform_$(terraformVersion)_linux_amd64.zip
        unzip terraform_$(terraformVersion)_linux_amd64.zip
        sudo mv terraform /usr/local/bin/
        terraform -version
      displayName: 'Install Terraform'
    - script: |
        cd modules/managementgroups
        terraform plan -out=tfplan
      displayName: 'Terraform Plan'

- stage: TerraformApply
  displayName: 'Terraform Apply'
  dependsOn: TerraformPlan
  condition: succeeded()
  jobs:
  - job: Apply
    timeoutInMinutes: 15
    cancelTimeoutInMinutes: 15
    steps:
    - checkout: self
    - script: |
        wget https://releases.hashicorp.com/terraform/$(terraformVersion)/terraform_$(terraformVersion)_linux_amd64.zip
        unzip terraform_$(terraformVersion)_linux_amd64.zip
        sudo mv terraform /usr/local/bin/
        terraform -version
      displayName: 'Install Terraform'
    - script: |
        export ARM_CLIENT_ID=$(ARM_CLIENT_ID)
        export ARM_CLIENT_SECRET=$(ARM_CLIENT_SECRET)
        export ARM_SUBSCRIPTION_ID=$(ARM_SUBSCRIPTION_ID)
        export ARM_TENANT_ID=$(ARM_TENANT_ID)    
        cd modules/managementgroups
        terraform apply -auto-approve tfplan
      displayName: 'Terraform Apply'
