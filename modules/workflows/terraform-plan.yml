name: Terraform Plan Execution

on:
  workflow_dispatch:

env:
  terraformVersion: '1.12.2'

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1

      - uses: azure/login@v2.1.0
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          audience: api://AzureADTokenExchange

      - uses: hashicorp/setup-terraform@v3.1.0
        with:
          terraform_version: ${{ env.terraformVersion }}

      - name: Terraform Init and Plan
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          TF_VAR_backend_resource_group_name: ${{ secrets.BACKEND_RESOURCE_GROUP_NAME }}
          TF_VAR_backend_storage_account_name: ${{ secrets.BACKEND_STORAGE_ACCOUNT_NAME }}
          TF_VAR_backend_container_name: ${{ secrets.BACKEND_CONTAINER_NAME }}
          TF_VAR_backend_key: managementgroups.terraform.tfstate
        run: |
          cd modules/managementgroups
          terraform init -reconfigure \
            -backend-config="resource_group_name=${TF_VAR_backend_resource_group_name}" \
            -backend-config="storage_account_name=${TF_VAR_backend_storage_account_name}" \
            -backend-config="container_name=${TF_VAR_backend_container_name}" \
            -backend-config="key=${TF_VAR_backend_key}"
          terraform plan -out=tfplan

      - name: Upload Terraform Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: plan
          path: modules/managementgroups/tfplan
          retention-days: 5

      - name: Check and Verify Terraform Plan
        run: |
          cd modules/managementgroups
          terraform show -no-color tfplan > plan.txt
          cat plan.txt
          terraform show -json tfplan > plan.json
          changes=$(jq '.resource_changes | length' plan.json)
          if [ "$changes" -eq "0" ]; then
            echo "No changes to apply. Exiting."
            exit 1
          fi